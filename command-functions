#!/usr/bin/env bash
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/property-functions"
source "$PLUGIN_AVAILABLE_PATH/docker-login/internal-functions"
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

# docker-login:report
cmd-docker-login-report() {
  declare desc="displays a docker-login report for one or more apps"
  declare cmd="docker-login:report"
  [[ "$1" == "$cmd" ]] && shift 1
  declare APP="$1"
  local INSTALLED_APPS=$(dokku_apps)

  if [[ -z "$APP" ]]; then
    for app in $INSTALLED_APPS; do
      cmd-docker-login-report-single "$app" | tee || true
    done
  else
    cmd-docker-login-report-single "$APP"
  fi
}

cmd-docker-login-report-single() {
  declare APP="$1"

  verify_app_name "$APP"
  
  dokku_log_info2 "${APP} docker-login information"
  if [[ fn-docker-login-is-configured "$APP" ]]; then
    dokku_log_verbose "enabled"
  else
    dokku_log_verbose "not enabled"
  fi
}


# docker-login:reset
cmd-docker-login-reset() {
  declare desc="reset docker-login info"
  declare cmd="docker-login:reset"
  [[ "$1" == "$cmd" ]] && shift 1
  declare APP="$1"

  verify_app_name "$APP"

  fn-docker-login-logout "$APP"
  dokku_log_verbose "Done"
}

# docker-login:set
cmd-docker-login-set() {
  declare desc="set docker-login info"
  declare cmd="docker-login:set"
  [[ "$1" == "$cmd" ]] && shift 1
  declare APP="$1" USERNAME="$2" PASSWORD="$3" REGISTRY="$4"

  fn-docker-login-login "$APP" "$USERNAME" "$PASSWORD" "$REGISTRY"
}

# docker-login:show-config
cmd-docker-login-show-config() {
  declare desc="show docker-login configuration"
  declare cmd="docker-login:show-config"
  [[ "$1" == "$cmd" ]] && shift 1
  declare APP="$1"

  verify_app_name "$APP"

  if [[ ! fn-docker-login-is-configured "$APP" ]]; then
    dokku_log_fail "docker login is not configured for $APP"
  fi

  echo "Username: $(fn-docker-login-get-username $APP)"
  echo "Password: $(fn-docker-login-get-password $APP)"
  echo "Registry: $(fn-docker-login-get-registry $APP)"
}
